{"version":3,"sources":["../../src/commands/StatusNotification.js"],"names":["ERRORCODE_CONNECTORLOCKFAILURE","ERRORCODE_EVCOMMUNICATIONERROR","ERRORCODE_GROUNDFAILURE","ERRORCODE_HIGHTEMPERATURE","ERRORCODE_INTERNALERROR","ERRORCODE_LOCALLISTCONFLICT","ERRORCODE_NOERROR","ERRORCODE_OTHERERROR","ERRORCODE_OVERCURRENTFAILURE","ERRORCODE_POWERMETERFAILURE","ERRORCODE_POWERSWITCHFAILURE","ERRORCODE_READERFAILURE","ERRORCODE_RESETFAILURE","ERRORCODE_UNDERVOLTAGE","ERRORCODE_OVERVOLTAGE","ERRORCODE_WEAKSIGNAL","STATUS_AVAILABLE","STATUS_PREPARING","STATUS_CHARGING","STATUS_SUSPENDEDEVSE","STATUS_SUSPENDEDEV","STATUS_FINISHING","STATUS_RESERVED","STATUS_UNAVAILABLE","STATUS_FAULTED","StatusNotification","values"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEO,IAAMA,0EAAiC,sBAAvC;AACA,IAAMC,0EAAiC,sBAAvC;AACA,IAAMC,4DAA0B,eAAhC;AACA,IAAMC,gEAA4B,iBAAlC;AACA,IAAMC,4DAA0B,eAAhC;AACA,IAAMC,oEAA8B,mBAApC;AACA,IAAMC,gDAAoB,SAA1B;AACA,IAAMC,sDAAuB,YAA7B;AACA,IAAMC,sEAA+B,oBAArC;AACA,IAAMC,oEAA8B,mBAApC;AACA,IAAMC,sEAA+B,oBAArC;AACA,IAAMC,4DAA0B,eAAhC;AACA,IAAMC,0DAAyB,cAA/B;AACA,IAAMC,0DAAyB,cAA/B;AACA,IAAMC,wDAAwB,aAA9B;AACA,IAAMC,sDAAuB,YAA7B;;AAEA,IAAMC,8CAAmB,WAAzB;AACA,IAAMC,8CAAmB,WAAzB;AACA,IAAMC,4CAAkB,UAAxB;AACA,IAAMC,sDAAuB,eAA7B;AACA,IAAMC,kDAAqB,aAA3B;AACA,IAAMC,8CAAmB,WAAzB;AACA,IAAMC,4CAAkB,UAAxB;AACA,IAAMC,kDAAqB,aAA3B;AACA,IAAMC,0CAAiB,SAAvB;;IAGDC,kB,WAAAA,kB;;;AACJ,8BAAaC,MAAb,EAAqB;AAAA;AAAA,6NACkBA,MADlB;AAEpB","file":"StatusNotification.js","sourcesContent":["import BaseCommand from './BaseCommand';\r\n\r\nimport requestSchema from '../../ocpp-1.6-schemas/StatusNotification';\r\nimport responseSchema from '../../ocpp-1.6-schemas/StatusNotificationResponse';\r\n\r\nexport const ERRORCODE_CONNECTORLOCKFAILURE = 'ConnectorLockFailure';\r\nexport const ERRORCODE_EVCOMMUNICATIONERROR = 'EVCommunicationError';\r\nexport const ERRORCODE_GROUNDFAILURE = 'GroundFailure';\r\nexport const ERRORCODE_HIGHTEMPERATURE = 'HighTemperature';\r\nexport const ERRORCODE_INTERNALERROR = 'InternalError';\r\nexport const ERRORCODE_LOCALLISTCONFLICT = 'LocalListConflict';\r\nexport const ERRORCODE_NOERROR = 'NoError';\r\nexport const ERRORCODE_OTHERERROR = 'OtherError';\r\nexport const ERRORCODE_OVERCURRENTFAILURE = 'OverCurrentFailure';\r\nexport const ERRORCODE_POWERMETERFAILURE = 'PowerMeterFailure';\r\nexport const ERRORCODE_POWERSWITCHFAILURE = 'PowerSwitchFailure';\r\nexport const ERRORCODE_READERFAILURE = 'ReaderFailure';\r\nexport const ERRORCODE_RESETFAILURE = 'ResetFailure';\r\nexport const ERRORCODE_UNDERVOLTAGE = 'UnderVoltage';\r\nexport const ERRORCODE_OVERVOLTAGE = 'OverVoltage';\r\nexport const ERRORCODE_WEAKSIGNAL = 'WeakSignal';\r\n\r\nexport const STATUS_AVAILABLE = 'Available';\r\nexport const STATUS_PREPARING = 'Preparing';\r\nexport const STATUS_CHARGING = 'Charging';\r\nexport const STATUS_SUSPENDEDEVSE = 'SuspendedEVSE';\r\nexport const STATUS_SUSPENDEDEV = 'SuspendedEV';\r\nexport const STATUS_FINISHING = 'Finishing';\r\nexport const STATUS_RESERVED = 'Reserved';\r\nexport const STATUS_UNAVAILABLE = 'Unavailable';\r\nexport const STATUS_FAULTED = 'Faulted';\r\n\r\nexport\r\nclass StatusNotification extends BaseCommand {\r\n  constructor (values) {\r\n    super(requestSchema, responseSchema, values);\r\n  }\r\n}\r\n"]}