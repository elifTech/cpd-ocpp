{"version":3,"sources":["../../src/commands/BaseCommand.js"],"names":["RESPONSE_SCHEMA_SYMBOL","BaseCommand","requestSchema","responseSchema","values","constructor","name","payload","response"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AAEA,IAAMA,yBAAyB,sBAAO,gBAAP,CAA/B;;IAGMC,W;AACJ,uBAAaC,aAAb,EAA4BC,cAA5B,EAA4CC,MAA5C,EAAoD;AAAA;;AAClD,SAAKJ,sBAAL,IAA+BG,cAA/B;;AAEA,4CAA0B,IAA1B,EAAgCD,aAAhC,EAA+CE,MAA/C;AACD;;;;qCAEiB;AAChB,aAAO,KAAKC,WAAL,CAAiBC,IAAxB;AACD;;;mCAEeC,O,EAAS;AACvB,UAAMC,WAAW,IAAI,YAAY,CAAE,CAAlB,EAAjB;;AAEA,8CAA0BA,QAA1B,EAAoC,KAAKR,sBAAL,CAApC,EAAkEO,OAAlE;;AAEA,aAAOC,QAAP;AACD;;;;;kBAjBGP,W","file":"BaseCommand.js","sourcesContent":["import { applyPropertiesValidators } from '../helpers';\r\n\r\nconst RESPONSE_SCHEMA_SYMBOL = Symbol('responseSchema');\r\n\r\nexport default\r\nclass BaseCommand {\r\n  constructor (requestSchema, responseSchema, values) {\r\n    this[RESPONSE_SCHEMA_SYMBOL] = responseSchema;\r\n\r\n    applyPropertiesValidators(this, requestSchema, values);\r\n  }\r\n\r\n  getCommandName () {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  createResponse (payload) {\r\n    const response = new function () {}();\r\n\r\n    applyPropertiesValidators(response, this[RESPONSE_SCHEMA_SYMBOL], payload);\r\n\r\n    return response;\r\n  }\r\n}\r\n"]}